image: docker:latest

variables:
    FLASK_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/kubernetes/flask
    API_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/kubernetes/api
    NGINX_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/kubernetes/nginx
    DOCKER_DEV_ENV_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH/env/test-env:latest
    DOCKER_DRIVER: overlay2

before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

stages:
    - build
    - test
    - push
    - release
    - deploy

build-api:
    stage: build
    services:
        - docker:dind
    script:
        - docker pull $API_IMAGE:test || true
        - docker build --cache-from $API_IMAGE:test --tag $API_IMAGE:$CI_COMMIT_SHA api/
        - docker push $API_IMAGE:$CI_COMMIT_SHA

build-flask:
    stage: build
    services:
        - docker:dind
    script:
        - docker pull $FLASK_IMAGE:test || true
        - docker build --cache-from $FLASK_IMAGE:test --tag $FLASK_IMAGE:$CI_COMMIT_SHA flask/
        - docker push $FLASK_IMAGE:$CI_COMMIT_SHA

build-nginx:
    stage: build
    services:
        - docker:dind
    script:
        - docker pull $NGINX_IMAGE:test || true
        - docker build --cache-from $NGINX_IMAGE:test --tag $NGINX_IMAGE:$CI_COMMIT_SHA nginx/
        - docker push $NGINX_IMAGE:$CI_COMMIT_SHA

build-test-env:
    stage: build
    services:
        - docker:dind
    script:
        - docker pull $DOCKER_DEV_ENV_IMAGE || true
        - docker build --cache-from $DOCKER_DEV_ENV_IMAGE -t $DOCKER_DEV_ENV_IMAGE tests/
        - docker push $DOCKER_DEV_ENV_IMAGE

test-api:
    stage: test
    image: $DOCKER_DEV_ENV_IMAGE
    before_script: 
        - ''
    services: 
        - redis
    script:
        - pytest -p no:cacheprovider tests

push-api:
    stage: push
    services:
        - docker:dind
    script:
        - docker pull $API_IMAGE:$CI_COMMIT_SHA
        - docker tag $API_IMAGE:$CI_COMMIT_SHA $API_IMAGE:test
        - docker push $API_IMAGE:test

push-flask:
    stage: push
    services:
        - docker:dind
    script:
        - docker pull $FLASK_IMAGE:$CI_COMMIT_SHA
        - docker tag $FLASK_IMAGE:$CI_COMMIT_SHA $FLASK_IMAGE:test
        - docker push $FLASK_IMAGE:test

push-nginx:
    stage: push
    services:
        - docker:dind
    script:
        - docker pull $NGINX_IMAGE:$CI_COMMIT_SHA
        - docker tag $NGINX_IMAGE:$CI_COMMIT_SHA $NGINX_IMAGE:test
        - docker push $NGINX_IMAGE:test

release-api:
    stage: release
    services:
        - docker:dind
    only:
        - kubernetes
    script:
        - docker pull $API_IMAGE:test
        - docker tag $API_IMAGE:test $API_IMAGE:latest
        - docker push $API_IMAGE:latest

release-flask:
    stage: release
    services:
        - docker:dind
    only:
        - kubernetes
    script:
        - docker pull $FLASK_IMAGE:test
        - docker tag $FLASK_IMAGE:test $FLASK_IMAGE:latest
        - docker push $FLASK_IMAGE:latest

release-nginx:
    stage: release
    services:
        - docker:dind
    only:
        - kubernetes
    script:
        - docker pull $NGINX_IMAGE:test
        - docker tag $NGINX_IMAGE:test $NGINX_IMAGE:latest
        - docker push $NGINX_IMAGE:latest

deploy:
    stage: deploy
    image: alpine:latest
    only:
        - kubernetes
    environment:
        name: production
    before_script:
        - ''
    script:
        - apk add --update ca-certificates && apk add --update -t deps curl && curl -L https://storage.googleapis.com/kubernetes-release/release/v1.12.1/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl
        - sed -i -e "s|__IMAGE__|${FLASK_IMAGE}:${CI_COMMIT_SHA}|g" deployment/flask-deployment.yaml
        - sed -i -e "s|__IMAGE__|${NGINX_IMAGE}:${CI_COMMIT_SHA}|g" deployment/nginx-deployment.yaml
        - sed -i -e "s|__IMAGE__|${API_IMAGE}:${CI_COMMIT_SHA}|g" deployment/api-deployment.yaml
        - kubectl config set-cluster "$CI_PROJECT_ID" --server="$KUBE_URL" --certificate-authority="$KUBE_CA_PEM_FILE"
        - kubectl config set-credentials "$CI_PROJECT_ID" --token="$KUBE_TOKEN"
        - kubectl config set-context "$CI_PROJECT_ID" --cluster="$CI_PROJECT_ID" --user="$CI_PROJECT_ID" --namespace="default"
        - kubectl config use-context "$CI_PROJECT_ID"
        - kubectl set image deployment.apps/api-deployment api-container=$API_IMAGE:$CI_COMMIT_SHA --record=true
        - kubectl set image deployment.apps/nginx-deployment nginx-container=$NGINX_IMAGE:$CI_COMMIT_SHA --record=true
        - kubectl set image deployment.apps/flask-deployment flask-container=$FLASK_IMAGE:$CI_COMMIT_SHA --record=true
        # - kubectl apply -f deployment/ --record


  



  